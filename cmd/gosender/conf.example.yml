# Provider accounts configuration
accounts:
  # SMS Providers
  # - provider: sms
  #   subtype: aliyun
  #   name: aliyun-main
  #   api_key: "LTAI4G..." # AccessKey ID
  #   api_secret: "xxx..." # AccessKey Secret
  #   sign_name: "MyApp"
  #   region: "cn-hangzhou"
  #   enabled: true
  #   weight: 10

  # - provider: sms
  #   subtype: tencent
  #   name: tencent-backup
  #   api_key: "AKIDxxx..." # SecretId
  #   api_secret: "xxx..." # SecretKey
  #   sign_name: "MyApp"
  #   app_id: "1400xxx"
  #   region: "ap-guangzhou"
  #   enabled: true
  #   weight: 5

  # - provider: sms
  #   subtype: huawei
  #   name: huawei-sms
  #   api_key: "xxx" # App Key
  #   api_secret: "xxx" # App Secret
  #   sign_name: "MyApp"
  #   sender: "10690xxx"
  #   enabled: false
  #   weight: 3

  # Email Providers
  - provider: email
    name: smtp-gmail
    host: "smtp.gmail.com"
    port: 587
    api_key: "user@gmail.com" # Username
    api_secret: "app_password" # App Password
    from: "noreply@myapp.com"
    enabled: true
    weight: 10

  - provider: email
    name: smtp-outlook
    host: "smtp-mail.outlook.com"
    port: 587
    api_key: "user@outlook.com"
    api_secret: "password"
    from: "noreply@myapp.com"
    enabled: false
    weight: 5

  # DingTalk Bot
  - provider: dingtalk
    name: dingtalk-alerts
    api_key: "webhook_token_here" # 钉钉机器人的access_token
    api_secret: "secret_here" # 安全设置中的签名密钥(签名/加签时需要)
    enabled: true
    weight: 10
    # 目前支持的消息类型: text, markdown

  # Telegram Bot
  - provider: telegram
    name: telegram-bot
    api_key: "bot_token_here" # Telegram Bot API Token (从@BotFather获取)
    enabled: true
    weight: 10
    # 目前支持的消息类型: text
    # 使用时需要在--to参数指定chat_id

  # Lark (Feishu) Bot
  - provider: lark
    name: lark-notifications
    api_key: "webhook_token_here" # 飞书/Lark机器人的webhook地址中的token部分
    api_secret: "signing_secret" # 安全设置中的签名密钥(签名/加签时需要)
    enabled: true
    weight: 10
    # 目前支持的消息类型: text

  # WeComBot (Enterprise WeChat)
  - provider: wecombot
    name: wecom-alerts
    api_key: "webhook_key_here"
    enabled: true
    weight: 10

  # # Webhook Endpoints
  # - provider: webhook
  #   name: slack-webhook
  #   url: "https://hooks.slack.com/services/xxx/xxx/xxx"
  #   method: "POST"
  #   headers:
  #     Content-Type: "application/json"
  #     Authorization: "Bearer token_here"
  #   enabled: true
  #   weight: 10

  # - provider: webhook
  #   name: discord-webhook
  #   url: "https://discord.com/api/webhooks/xxx/xxx"
  #   method: "POST"
  #   headers:
  #     Content-Type: "application/json"
  #   enabled: true
  #   weight: 8

  # ServerChan
  - provider: serverchan
    name: serverchan-notify
    api_key: "SCT_YOUR_KEY"
    enabled: true
    weight: 5

  # # EmailAPI Providers
  # - provider: emailapi
  #   subtype: resend
  #   name: resend-api
  #   api_key: "re_xxx"
  #   from: "noreply@myapp.com"
  #   enabled: false
  #   weight: 10

  # - provider: emailapi
  #   subtype: emailjs
  #   name: emailjs-service
  #   api_key: "service_id"
  #   api_secret: "template_id"
  #   user_id: "user_id"
  #   enabled: false
  #   weight: 8

# Example CLI flag defaults (can be overridden by command line)
# These settings can also be set via environment variables with GO_SENDER_ prefix
# For example: GO_SENDER_OUTPUT=json, GO_SENDER_VERBOSE=true

# Default output format
output: console # console, json, yaml

# Default logging
verbose: false
log_level: DEBUG # DEBUG, INFO, WARN, ERROR

# Default provider selection strategy
# strategy: round_robin  # round_robin, weighted, failover
